/*==============================================================================
 *  SectionSteelCalculationTool - A tool that assists Excel in calculating 
 *  quantities of steel structures
 *
 *  Copyright © 2024 Huang YongXing.                 
 *
 *  This library is free software, licensed under the terms of the GNU 
 *  General Public License as published by the Free Software Foundation, 
 *  either version 3 of the License, or (at your option) any later version. 
 *  You should have received a copy of the GNU General Public License 
 *  along with this program. If not, see <http://www.gnu.org/licenses/>. 
 *==============================================================================
 *  GBData.cs: data of chinese national standard section steel 
 *  written by Huang YongXing - thinkerhua@hotmail.com
 *==============================================================================*/
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;

namespace SectionSteel {
    /// <summary>
    /// 国标型钢理论数据基类。
    /// </summary>
    public class GBDataBase {
        public string Name { get; }
        public double[] Parameters { get; }
        public double Weight { get; }
        public double Area { get; }
        public GBDataBase(string name, double[] parameters, double weight, double area) {
            Name = name;
            Parameters = parameters;
            Weight = weight;
            Area = area;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="parameters"></param>
        /// <returns>parameters为null时，无论如何均返回false</returns>
        public bool Equals(double[] parameters) {
            if(parameters == null)
                return false;

            //此处长度判断，旨在适配工字钢和槽钢
            //因为工字钢和槽钢国标完整表示法为“高度*腿宽*腰厚”，只有三参数
            for(int i = 0;
                i < (parameters.Length < this.Parameters.Length ? parameters.Length : this.Parameters.Length);
                i++)
                if(this.Parameters[i] != parameters[i]) return false;

            return true;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="data"></param>
        /// <returns>data为null时，无论如何均返回false</returns>
        public bool Equals(GBDataBase data) {
            if(data == null)
                return false;
            if(data.GetHashCode() == this.GetHashCode())
                return true;
            return this.Equals(data.Parameters);
        }
    }
    /// <summary>
    /// 国标型钢理论数据。
    /// </summary>
    static class GBData {
        public static readonly int DENSITY = 7850;
        public static GBDataBase SearchGBData(List<GBDataBase> search_in, string search_by_name) {
            GBDataBase resault = null;
            if(search_by_name == null)
                return resault;
            foreach(var data in search_in)
                if(data.Name == search_by_name) { resault = data; break; }

            return resault;
        }
        public static GBDataBase SearchGBData(List<GBDataBase> search_in, double[] search_by_parameters) {
            GBDataBase resault = null;
            if(search_by_parameters == null)
                return resault;
            foreach(var data in search_in)
                if(data.Equals(search_by_parameters)) { resault = data; break; }

            return resault;
        }
        /// <summary>
        /// 热轧H型钢(Hot rolled H section steel) - 宽翼缘H型钢
        /// </summary>
        public static List<GBDataBase> HW => new List<GBDataBase> {
            new GBDataBase("100*100", new double[] { 100, 100, 6,8 }, 16.9, 0.574),
            new GBDataBase("125*125", new double[] { 125, 125, 6.5,9 }, 23.6, 0.723),
            new GBDataBase("150*150", new double[] { 150, 150, 7,10 }, 31.1, 0.872),
            new GBDataBase("175*175", new double[] { 175, 175, 7.5,11 }, 40.4, 1.01),
            new GBDataBase("200*200", new double[] { 200, 200, 8,12 }, 49.9, 1.16),
            new GBDataBase("", new double[] { 200, 204, 12,12 }, 56.2, 1.17),
            new GBDataBase("", new double[] { 244, 252, 11,11 }, 63.8, 1.45),
            new GBDataBase("250*250", new double[] { 250, 250, 9,14 }, 71.8, 1.46),
            new GBDataBase("", new double[] { 250, 255, 14,14 }, 81.6, 1.47),
            new GBDataBase("", new double[] { 294, 302, 12,12 }, 83.5, 1.75),
            new GBDataBase("300*300", new double[] { 300, 300, 10,15 }, 93, 1.76),
            new GBDataBase("", new double[] { 300, 305, 15,15 }, 105, 1.77),
            new GBDataBase("", new double[] { 338, 351, 13,13 }, 105, 2.03),
            new GBDataBase("", new double[] { 344, 348, 10,16 }, 113, 2.04),
            new GBDataBase("", new double[] { 344, 354, 16,16 }, 129, 2.05),
            new GBDataBase("350*350", new double[] { 350, 350, 12,19 }, 135, 2.05),
            new GBDataBase("", new double[] { 350, 357, 19,19 }, 154, 2.07),
            new GBDataBase("", new double[] { 388, 402, 15,15 }, 140, 2.32),
            new GBDataBase("", new double[] { 394, 398, 11,18 }, 147, 2.32),
            new GBDataBase("", new double[] { 394, 405, 18,18 }, 168, 2.33),
            new GBDataBase("400*400", new double[] { 400, 400, 13,21 }, 172, 2.34),
            new GBDataBase("", new double[] { 400, 408, 21,21 }, 197, 2.35),
            new GBDataBase("", new double[] { 414, 405, 18,28 }, 232, 2.37),
            new GBDataBase("", new double[] { 428, 407, 20,35 }, 283, 2.41),
            new GBDataBase("", new double[] { 458, 417, 30,50 }, 415, 2.49),
            new GBDataBase("", new double[] { 498, 432, 45,70 }, 604, 2.6),
            new GBDataBase("500*500", new double[] { 492, 465, 15,20 }, 202, 2.78),
            new GBDataBase("", new double[] { 502, 465, 15,25 }, 239, 2.8),
            new GBDataBase("", new double[] { 502, 470, 20,25 }, 259, 2.81),
        };
        /// <summary>
        /// 热轧H型钢(Hot rolled H section steel) - 中翼缘H型钢
        /// </summary>
        public static List<GBDataBase> HM => new List<GBDataBase> {
            new GBDataBase("150*100", new double[] { 148, 100, 6,9 }, 20.7, 0.67),
            new GBDataBase("200*150", new double[] { 194, 150, 6,9 }, 29.9, 0.962),
            new GBDataBase("250*175", new double[] { 244, 175, 7,11 }, 43.6, 1.15),
            new GBDataBase("300*200", new double[] { 294, 200, 8,12 }, 55.8, 1.35),
            new GBDataBase("", new double[] { 298, 201, 9,14 }, 64.4, 1.36),
            new GBDataBase("350*250", new double[] { 340, 250, 9,14 }, 78.1, 1.64),
            new GBDataBase("400*300", new double[] { 390, 300, 10,16 }, 105, 1.94),
            new GBDataBase("450*300", new double[] { 440, 300, 11,18 }, 121, 2.04),
            new GBDataBase("", new double[] { 482, 300, 11,15 }, 111, 2.12),
            new GBDataBase("500*300", new double[] { 488, 300, 11,18 }, 125, 2.13),
            new GBDataBase("", new double[] { 544, 300, 11,15 }, 116, 2.24),
            new GBDataBase("550*300", new double[] { 550, 300, 11,18 }, 130, 2.26),
            new GBDataBase("", new double[] { 582, 300, 12,17 }, 133, 2.32),
            new GBDataBase("600*300", new double[] { 588, 300, 12,20 }, 147, 2.33),
            new GBDataBase("", new double[] { 594, 302, 14,23 }, 170, 2.35),
        };
        /// <summary>
        /// 热轧H型钢(Hot rolled H section steel) - 窄翼缘H型钢
        /// </summary>
        public static List<GBDataBase> HN => new List<GBDataBase> {
            new GBDataBase("100*50", new double[] { 100, 50, 5,7 }, 9.3, 0.376),
            new GBDataBase("125*60", new double[] { 125, 60, 6,8 }, 13.1, 0.464),
            new GBDataBase("150*75", new double[] { 150, 75, 5,7 }, 14, 0.576),
            new GBDataBase("175*90", new double[] { 175, 90, 5,8 }, 18, 0.686),
            new GBDataBase("", new double[] { 198, 99, 4.5,7 }, 17.8, 0.769),
            new GBDataBase("200*100", new double[] { 200, 100, 5.5,8 }, 20.9, 0.775),
            new GBDataBase("", new double[] { 248, 124, 5,8 }, 25.1, 0.968),
            new GBDataBase("250*125", new double[] { 250, 125, 6,9 }, 29, 0.974),
            new GBDataBase("", new double[] { 298, 149, 5.5,8 }, 32, 1.16),
            new GBDataBase("300*150", new double[] { 300, 150, 6.5,9 }, 36.7, 1.16),
            new GBDataBase("", new double[] { 346, 174, 6,9 }, 41.2, 1.35),
            new GBDataBase("350*175", new double[] { 350, 175, 7,11 }, 49.4, 1.36),
            new GBDataBase("400*150", new double[] { 400, 150, 8,13 }, 55.2, 1.36),
            new GBDataBase("", new double[] { 396, 199, 7,11 }, 56.1, 1.55),
            new GBDataBase("400*200", new double[] { 400, 200, 8,13 }, 65.4, 1.56),
            new GBDataBase("", new double[] { 446, 150, 7,12 }, 52.6, 1.46),
            new GBDataBase("450*150", new double[] { 450, 151, 8,14 }, 60.8, 1.47),
            new GBDataBase("", new double[] { 446, 199, 8,12 }, 65.1, 1.65),
            new GBDataBase("450*200", new double[] { 450, 200, 9,14 }, 74.9, 1.66),
            new GBDataBase("", new double[] { 470, 150, 7,13 }, 56.2, 1.5),
            new GBDataBase("", new double[] { 475, 151.5, 8.5,15.5 }, 67.6, 1.52),
            new GBDataBase("475*150", new double[] { 482, 153.5, 10.5,19 }, 83.5, 1.53),
            new GBDataBase("", new double[] { 492, 150, 7,12 }, 55.1, 1.55),
            new GBDataBase("", new double[] { 500, 152, 9,16 }, 72.4, 1.57),
            new GBDataBase("500*150", new double[] { 504, 153, 10,18 }, 81.1, 1.58),
            new GBDataBase("", new double[] { 496, 199, 9,14 }, 77.9, 1.75),
            new GBDataBase("500*200", new double[] { 500, 200, 10,16 }, 88.1, 1.76),
            new GBDataBase("", new double[] { 506, 201, 11,19 }, 102, 1.77),
            new GBDataBase("", new double[] { 546, 199, 9,14 }, 81.5, 1.85),
            new GBDataBase("550*200", new double[] { 550, 200, 10,16 }, 92, 1.86),
            new GBDataBase("", new double[] { 596, 199, 10,15 }, 92.4, 1.95),
            new GBDataBase("600*200", new double[] { 600, 200, 11,17 }, 103, 1.96),
            new GBDataBase("", new double[] { 606, 201, 12,20 }, 118, 1.97),
            new GBDataBase("", new double[] { 625, 198.5, 13.5,17.5 }, 118, 1.99),
            new GBDataBase("625*200", new double[] { 630, 200, 15,20 }, 133, 2.01),
            new GBDataBase("", new double[] { 638, 202, 17,24 }, 156, 2.03),
            new GBDataBase("", new double[] { 646, 299, 12,18 }, 144, 2.43),
            new GBDataBase("650*300", new double[] { 650, 300, 13,20 }, 159, 2.44),
            new GBDataBase("", new double[] { 654, 301, 14,22 }, 173, 2.45),
            new GBDataBase("", new double[] { 692, 300, 13,20 }, 163, 2.53),
            new GBDataBase("700*300", new double[] { 700, 300, 13,24 }, 182, 2.54),
            new GBDataBase("", new double[] { 734, 299, 12,16 }, 143, 2.61),
            new GBDataBase("", new double[] { 742, 300, 13,20 }, 168, 2.63),
            new GBDataBase("750*300", new double[] { 750, 300, 13,24 }, 187, 2.64),
            new GBDataBase("", new double[] { 758, 303, 16,28 }, 224, 2.67),
            new GBDataBase("", new double[] { 792, 300, 14,22 }, 188, 2.73),
            new GBDataBase("800*300", new double[] { 800, 300, 14,26 }, 207, 2.74),
            new GBDataBase("", new double[] { 834, 298, 14,19 }, 179, 2.8),
            new GBDataBase("", new double[] { 842, 299, 15,23 }, 204, 2.82),
            new GBDataBase("850*300", new double[] { 850, 300, 16,27 }, 229, 2.84),
            new GBDataBase("", new double[] { 858, 301, 17,31 }, 255, 2.86),
            new GBDataBase("", new double[] { 890, 299, 15,23 }, 210, 2.92),
            new GBDataBase("900*300", new double[] { 900, 300, 16,28 }, 240, 2.94),
            new GBDataBase("", new double[] { 912, 302, 18,34 }, 283, 2.97),
            new GBDataBase("", new double[] { 970, 297, 16,21 }, 217, 3.07),
            new GBDataBase("", new double[] { 980, 298, 17,26 }, 248, 3.09),
            new GBDataBase("", new double[] { 990, 298, 17,31 }, 271, 3.11),
            new GBDataBase("1000*300", new double[] { 1000, 300, 19,36 }, 310, 3.13),
            new GBDataBase("", new double[] { 1008, 302, 21,40 }, 345, 3.15),
        };
        /// <summary>
        /// 热轧H型钢(Hot rolled H section steel) - 薄壁H型钢
        /// </summary>
        public static List<GBDataBase> HT => new List<GBDataBase> {
            new GBDataBase("", new double[] { 95, 48, 3.2,4.5 }, 5.98, 0.362),
            new GBDataBase("100*50", new double[] { 97, 49, 4,5.5 }, 7.36, 0.368),
            new GBDataBase("100*100", new double[] { 96, 99, 4.5,6 }, 12.7, 0.565),
            new GBDataBase("", new double[] { 118, 58, 3.2,4.5 }, 7.26, 0.448),
            new GBDataBase("125*60", new double[] { 120, 59, 4,5.5 }, 8.94, 0.454),
            new GBDataBase("125*125", new double[] { 119, 123, 4.5,6 }, 15.8, 0.707),
            new GBDataBase("", new double[] { 145, 73, 3.2,4.5 }, 9, 0.562),
            new GBDataBase("150*75", new double[] { 147, 74, 4,5.5 }, 11.1, 0.568),
            new GBDataBase("", new double[] { 139, 97, 3.2,4.5 }, 10.6, 0.646),
            new GBDataBase("150*100", new double[] { 142, 99, 4.5,6 }, 14.3, 0.657),
            new GBDataBase("", new double[] { 144, 148, 5,7 }, 21.8, 0.856),
            new GBDataBase("150*150", new double[] { 147, 149, 6,8.5 }, 26.4, 0.864),
            new GBDataBase("", new double[] { 168, 88, 3.2,4.5 }, 10.6, 0.668),
            new GBDataBase("175*90", new double[] { 171, 89, 4,6 }, 13.8, 0.676),
            new GBDataBase("", new double[] { 167, 173, 5,7 }, 26.2, 0.994),
            new GBDataBase("175*175", new double[] { 172, 175, 6.5,9.5 }, 35, 1.01),
            new GBDataBase("", new double[] { 193, 98, 3.2,4.5 }, 12, 0.758),
            new GBDataBase("200*100", new double[] { 196, 99, 4,6 }, 15.5, 0.766),
            new GBDataBase("200*150", new double[] { 188, 149, 4.5,6 }, 20.7, 0.949),
            new GBDataBase("200*200", new double[] { 192, 198, 6,8 }, 34.3, 1.14),
            new GBDataBase("250*125", new double[] { 244, 124, 4.5,6 }, 20.3, 0.961),
            new GBDataBase("250*175", new double[] { 238, 173, 4.5,8 }, 30.7, 1.14),
            new GBDataBase("300*150", new double[] { 294, 148, 4.5,6 }, 25, 1.15),
            new GBDataBase("300*200", new double[] { 286, 198, 6,8 }, 38.7, 1.33),
            new GBDataBase("350*175", new double[] { 340, 173, 4.5,6 }, 29, 1.34),
            new GBDataBase("400*150", new double[] { 390, 148, 6,8 }, 37.3, 1.34),
            new GBDataBase("400*200", new double[] { 390, 198, 6,8 }, 43.6, 1.54),
        };
        /// <summary>
        /// 热轧剖分T型钢(Hot rolled cut T section steel) - 宽翼缘剖分T型钢
        /// </summary>
        public static List<GBDataBase> TW => new List<GBDataBase> {
            new GBDataBase("50*100", new double[] { 50, 100, 6,8 }, 8.47, 0.293),
            new GBDataBase("62.5*125", new double[] { 62.5, 125, 6.5,9 }, 11.8, 0.368),
            new GBDataBase("75*150", new double[] { 75, 150, 7,10 }, 15.6, 0.443),
            new GBDataBase("87.5*175", new double[] { 87.5, 175, 7.5,11 }, 20.2, 0.514),
            new GBDataBase("100*200", new double[] { 100, 200, 8,12 }, 24.9, 0.589),
            new GBDataBase("", new double[] { 100, 204, 12,12 }, 28.1, 0.597),
            new GBDataBase("125*250", new double[] { 125, 250, 9,14 }, 35.9, 0.739),
            new GBDataBase("", new double[] { 125, 255, 14,14 }, 40.8, 0.749),
            new GBDataBase("", new double[] { 147, 302, 12,12 }, 41.7, 0.887),
            new GBDataBase("150*300", new double[] { 150, 300, 10,15 }, 46.5, 0.889),
            new GBDataBase("", new double[] { 150, 305, 15,15 }, 52.4, 0.899),
            new GBDataBase("", new double[] { 172, 348, 10,16 }, 56.5, 1.03),
            new GBDataBase("175*350", new double[] { 175, 350, 12,19 }, 67.5, 1.04),
            new GBDataBase("", new double[] { 194, 402, 15,15 }, 70, 1.17),
            new GBDataBase("", new double[] { 197, 398, 11,18 }, 73.3, 1.17),
            new GBDataBase("200*400", new double[] { 200, 400, 13,21 }, 85.8, 1.18),
            new GBDataBase("", new double[] { 200, 408, 21,21 }, 98.4, 1.2),
            new GBDataBase("", new double[] { 207, 405, 18,28 }, 116, 1.21),
            new GBDataBase("", new double[] { 214, 407, 20,35 }, 142, 1.22),
        };
        /// <summary>
        /// 热轧剖分T型钢(Hot rolled cut T section steel) - 中翼缘剖分T型钢
        /// </summary>
        public static List<GBDataBase> TM => new List<GBDataBase> {
            new GBDataBase("75*100", new double[] { 74, 100, 6,9 }, 10.3, 0.341),
            new GBDataBase("100*150", new double[] { 97, 150, 6,9 }, 15, 0.487),
            new GBDataBase("125*175", new double[] { 122, 175, 7,11 }, 21.8, 0.583),
            new GBDataBase("", new double[] { 147, 200, 8,12 }, 27.9, 0.683),
            new GBDataBase("150*200", new double[] { 149, 201, 9,14 }, 32.2, 0.689),
            new GBDataBase("175*250", new double[] { 170, 250, 9,14 }, 39.1, 0.829),
            new GBDataBase("200*300", new double[] { 195, 300, 10,16 }, 52.3, 0.979),
            new GBDataBase("225*300", new double[] { 220, 300, 11,18 }, 60.4, 1.03),
            new GBDataBase("", new double[] { 241, 300, 11,15 }, 55.4, 1.07),
            new GBDataBase("250*300", new double[] { 244, 300, 11,18 }, 62.5, 1.08),
            new GBDataBase("", new double[] { 272, 300, 11,15 }, 58.1, 1.13),
            new GBDataBase("275*300", new double[] { 275, 300, 11,18 }, 65.2, 1.14),
            new GBDataBase("", new double[] { 291, 300, 12,17 }, 66.4, 1.17),
            new GBDataBase("", new double[] { 294, 300, 12,20 }, 73.5, 1.18),
            new GBDataBase("300*300", new double[] { 297, 302, 14,23 }, 85.2, 1.19),
        };
        /// <summary>
        /// 热轧剖分T型钢(Hot rolled cut T section steel) - 窄翼缘剖分T型钢
        /// </summary>
        public static List<GBDataBase> TN => new List<GBDataBase> {
            new GBDataBase("50*50", new double[] { 50, 50, 5,7 }, 4.65, 0.193),
            new GBDataBase("62.5*60", new double[] { 62.5, 60, 6,8 }, 6.55, 0.238),
            new GBDataBase("75*75", new double[] { 75, 75, 5,7 }, 7, 0.293),
            new GBDataBase("", new double[] { 85.5, 89, 4,6 }, 6.9, 0.342),
            new GBDataBase("87.5*90", new double[] { 87.5, 90, 5,8 }, 8.98, 0.348),
            new GBDataBase("", new double[] { 99, 99, 4.5,7 }, 8.9, 0.389),
            new GBDataBase("100*100", new double[] { 100, 100, 5.5,8 }, 10.5, 0.393),
            new GBDataBase("", new double[] { 124, 124, 5,8 }, 12.6, 0.489),
            new GBDataBase("125*125", new double[] { 125, 125, 6,9 }, 14.5, 0.493),
            new GBDataBase("", new double[] { 149, 149, 5.5,8 }, 16, 0.585),
            new GBDataBase("150*150", new double[] { 150, 150, 6.5,9 }, 18.4, 0.589),
            new GBDataBase("", new double[] { 173, 174, 6,9 }, 20.6, 0.683),
            new GBDataBase("175*175", new double[] { 175, 175, 7,11 }, 24.7, 0.689),
            new GBDataBase("", new double[] { 198, 199, 7,11 }, 28, 0.783),
            new GBDataBase("200*200", new double[] { 200, 200, 8,13 }, 32.7, 0.789),
            new GBDataBase("", new double[] { 223, 150, 7,12 }, 26.3, 0.735),
            new GBDataBase("225*150", new double[] { 225, 151, 8,14 }, 30.4, 0.741),
            new GBDataBase("", new double[] { 223, 199, 8,12 }, 32.6, 0.833),
            new GBDataBase("225*200", new double[] { 225, 200, 9,14 }, 37.5, 0.839),
            new GBDataBase("", new double[] { 235, 150, 7,13 }, 28.1, 0.759),
            new GBDataBase("237.5*150", new double[] { 237.5, 151.5, 8.5,15.5 }, 33.8, 0.767),
            new GBDataBase("", new double[] { 241, 153.5, 10.5,19 }, 41.8, 0.778),
            new GBDataBase("", new double[] { 246, 150, 7,12 }, 27.6, 0.781),
            new GBDataBase("250*150", new double[] { 250, 152, 9,16 }, 36.2, 0.793),
            new GBDataBase("", new double[] { 252, 153, 10,18 }, 40.6, 0.799),
            new GBDataBase("", new double[] { 248, 199, 9,14 }, 39, 0.883),
            new GBDataBase("250*200", new double[] { 250, 200, 10,16 }, 44.1, 0.889),
            new GBDataBase("", new double[] { 253, 201, 11,19 }, 50.8, 0.897),
            new GBDataBase("", new double[] { 273, 199, 9,14 }, 40.7, 0.933),
            new GBDataBase("275*200", new double[] { 275, 200, 10,16 }, 46, 0.939),
            new GBDataBase("", new double[] { 298, 199, 10,15 }, 46.2, 0.983),
            new GBDataBase("300*200", new double[] { 300, 200, 11,17 }, 51.7, 0.989),
            new GBDataBase("", new double[] { 303, 201, 12,20 }, 58.8, 0.997),
            new GBDataBase("312.5*200", new double[] { 312.5, 198.5, 13.5,17.5 }, 59.1, 1.01),
            new GBDataBase("", new double[] { 315, 200, 15,20 }, 66.7, 1.02),
            new GBDataBase("", new double[] { 319, 202, 17,24 }, 78, 1.03),
            new GBDataBase("", new double[] { 323, 299, 12,18 }, 72.1, 1.23),
            new GBDataBase("325*300", new double[] { 325, 300, 13,20 }, 79.3, 1.23),
            new GBDataBase("", new double[] { 327, 301, 14,22 }, 86.59, 1.24),
            new GBDataBase("", new double[] { 346, 300, 13,20 }, 81.5, 1.28),
            new GBDataBase("350*300", new double[] { 350, 300, 13,24 }, 90.9, 1.28),
            new GBDataBase("", new double[] { 396, 300, 14,22 }, 94, 1.38),
            new GBDataBase("400*300", new double[] { 400, 300, 14,26 }, 103, 1.38),
            new GBDataBase("", new double[] { 445, 299, 15,23 }, 105, 1.47),
            new GBDataBase("450*300", new double[] { 450, 300, 16,28 }, 120, 1.48),
            new GBDataBase("", new double[] { 456, 302, 18,34 }, 141, 1.5),
        };
        /// <summary>
        /// 热轧型钢(Hot rolled section steel) - 工字钢
        /// </summary>
        public static List<GBDataBase> I => new List<GBDataBase> {
            new GBDataBase("10", new double[] { 100, 68, 4.5,7.6 }, 11.3, 0.432),
            new GBDataBase("12", new double[] { 120, 74, 5,8.4 }, 14, 0.493),
            new GBDataBase("12.6", new double[] { 126, 74, 5,8.4 }, 14.2, 0.505),
            new GBDataBase("14", new double[] { 140, 80, 5.5,9.1 }, 16.9, 0.553),
            new GBDataBase("16", new double[] { 160, 88, 6,9.9 }, 20.5, 0.621),
            new GBDataBase("18", new double[] { 180, 94, 6.5,10.7 }, 24.1, 0.681),
            new GBDataBase("20a", new double[] { 200, 100, 7,11.4 }, 27.9, 0.742),
            new GBDataBase("20b", new double[] { 200, 102, 9,11.4 }, 31.1, 0.746),
            new GBDataBase("22a", new double[] { 220, 110, 7.5,12.3 }, 33.1, 0.817),
            new GBDataBase("22b", new double[] { 220, 112, 9.5,12.3 }, 36.5, 0.821),
            new GBDataBase("24a", new double[] { 240, 116, 8,13 }, 37.5, 0.878),
            new GBDataBase("24b", new double[] { 240, 118, 10,13 }, 41.2, 0.882),
            new GBDataBase("25a", new double[] { 250, 116, 8,13 }, 38.1, 0.898),
            new GBDataBase("25b", new double[] { 250, 118, 10,13 }, 42, 0.902),
            new GBDataBase("27a", new double[] { 270, 122, 8.5,13.7 }, 42.8, 0.958),
            new GBDataBase("27b", new double[] { 270, 124, 10.5,13.7 }, 47, 0.962),
            new GBDataBase("28a", new double[] { 280, 122, 8.5,13.7 }, 43.5, 0.978),
            new GBDataBase("28b", new double[] { 280, 124, 10.5,13.7 }, 47.9, 0.982),
            new GBDataBase("30a", new double[] { 300, 126, 9,14.4 }, 48.1, 1.031),
            new GBDataBase("30b", new double[] { 300, 128, 11,14.4 }, 52.8, 1.035),
            new GBDataBase("30c", new double[] { 300, 130, 13,14.4 }, 57.5, 1.039),
            new GBDataBase("32a", new double[] { 320, 130, 9.5,15 }, 52.7, 1.084),
            new GBDataBase("32b", new double[] { 320, 132, 11.5,15 }, 57.7, 1.088),
            new GBDataBase("32c", new double[] { 320, 134, 13.5,15 }, 62.7, 1.092),
            new GBDataBase("36a", new double[] { 360, 136, 10,15.8 }, 60, 1.185),
            new GBDataBase("36b", new double[] { 360, 138, 12,15.8 }, 65.7, 1.189),
            new GBDataBase("36c", new double[] { 360, 140, 14,15.8 }, 71.3, 1.193),
            new GBDataBase("40a", new double[] { 400, 142, 10.5,16.5 }, 67.6, 1.285),
            new GBDataBase("40b", new double[] { 400, 144, 12.5,16.5 }, 73.8, 1.289),
            new GBDataBase("40c", new double[] { 400, 146, 14.5,16.5 }, 80.1, 1.293),
            new GBDataBase("45a", new double[] { 450, 150, 11.5,18 }, 80.4, 1.411),
            new GBDataBase("45b", new double[] { 450, 152, 13.5,18 }, 87.4, 1.415),
            new GBDataBase("45c", new double[] { 450, 154, 15.5,18 }, 94.5, 1.419),
            new GBDataBase("50a", new double[] { 500, 158, 12,20 }, 93.6, 1.539),
            new GBDataBase("50b", new double[] { 500, 160, 14,20 }, 101, 1.543),
            new GBDataBase("50c", new double[] { 500, 162, 16,20 }, 109, 1.547),
            new GBDataBase("55a", new double[] { 550, 166, 12.5,21 }, 105, 1.667),
            new GBDataBase("55b", new double[] { 550, 168, 14.5,21 }, 114, 1.671),
            new GBDataBase("55c", new double[] { 550, 170, 16.5,21 }, 123, 1.675),
            new GBDataBase("56a", new double[] { 560, 166, 12.5,21 }, 106, 1.687),
            new GBDataBase("56b", new double[] { 560, 168, 14.5,21 }, 115, 1.691),
            new GBDataBase("56c", new double[] { 560, 170, 16.5,21 }, 124, 1.695),
            new GBDataBase("63a", new double[] { 630, 176, 13,22 }, 121, 1.862),
            new GBDataBase("63b", new double[] { 630, 178, 15,22 }, 131, 1.866),
            new GBDataBase("63c", new double[] { 630, 180, 17,22 }, 141, 1.87),
        };
        /// <summary>
        /// 热轧型钢(Hot rolled section steel) - 槽钢
        /// </summary>
        public static List<GBDataBase> CHAN => new List<GBDataBase> {
            new GBDataBase("5", new double[] { 50, 37, 4.5,7 }, 5.44, 0.226),
            new GBDataBase("6.3", new double[] { 63, 40, 4.8,7.5 }, 6.63, 0.262),
            new GBDataBase("6.5", new double[] { 65, 40, 4.3,7.5 }, 6.51, 0.267),
            new GBDataBase("8", new double[] { 80, 43, 5,8 }, 8.04, 0.307),
            new GBDataBase("10", new double[] { 100, 48, 5.3,8.5 }, 10, 0.365),
            new GBDataBase("12", new double[] { 120, 53, 5.5,9 }, 12.1, 0.423),
            new GBDataBase("12.6", new double[] { 126, 53, 5.5,9 }, 12.3, 0.435),
            new GBDataBase("14a", new double[] { 140, 58, 6,9.5 }, 14.5, 0.48),
            new GBDataBase("14b", new double[] { 140, 60, 8,9.5 }, 16.7, 0.484),
            new GBDataBase("16a", new double[] { 160, 63, 6.5,10 }, 17.2, 0.538),
            new GBDataBase("16b", new double[] { 160, 65, 8.5,10 }, 19.8, 0.542),
            new GBDataBase("18a", new double[] { 180, 68, 7,10.5 }, 20.2, 0.596),
            new GBDataBase("18b", new double[] { 180, 70, 9,10.5 }, 23, 0.6),
            new GBDataBase("20a", new double[] { 200, 73, 7,11 }, 22.6, 0.654),
            new GBDataBase("20b", new double[] { 200, 75, 9,11 }, 25.8, 0.658),
            new GBDataBase("22a", new double[] { 220, 77, 7,11.5 }, 25, 0.709),
            new GBDataBase("22b", new double[] { 220, 79, 9,11.5 }, 28.5, 0.713),
            new GBDataBase("24a", new double[] { 240, 78, 7,12 }, 26.9, 0.752),
            new GBDataBase("24b", new double[] { 240, 80, 9,12 }, 30.6, 0.756),
            new GBDataBase("24c", new double[] { 240, 82, 11,12 }, 34.4, 0.76),
            new GBDataBase("25a", new double[] { 250, 78, 7,12 }, 27.4, 0.722),
            new GBDataBase("25b", new double[] { 250, 80, 9,12 }, 31.3, 0.776),
            new GBDataBase("25c", new double[] { 250, 82, 11,12 }, 35.3, 0.78),
            new GBDataBase("27a", new double[] { 270, 82, 7.5,12.5 }, 30.8, 0.826),
            new GBDataBase("27b", new double[] { 270, 84, 9.5,12.5 }, 35.1, 0.83),
            new GBDataBase("27c", new double[] { 270, 86, 11.5,12.5 }, 39.3, 0.834),
            new GBDataBase("28a", new double[] { 280, 82, 7.5,12.5 }, 31.4, 0.846),
            new GBDataBase("28b", new double[] { 280, 84, 9.5,12.5 }, 35.8, 0.85),
            new GBDataBase("28c", new double[] { 280, 86, 11.5,12.5 }, 40.2, 0.854),
            new GBDataBase("30a", new double[] { 300, 85, 7.5,13.5 }, 34.5, 0.897),
            new GBDataBase("30b", new double[] { 300, 87, 9.5,13.5 }, 39.2, 0.901),
            new GBDataBase("30c", new double[] { 300, 89, 11.5,13.5 }, 43.9, 0.905),
            new GBDataBase("32a", new double[] { 320, 88, 8,14 }, 38.1, 0.947),
            new GBDataBase("32b", new double[] { 320, 90, 10,14 }, 43.1, 0.951),
            new GBDataBase("32c", new double[] { 320, 92, 12,14 }, 48.1, 0.955),
            new GBDataBase("36a", new double[] { 360, 96, 9,16 }, 47.8, 1.053),
            new GBDataBase("36b", new double[] { 360, 98, 11,16 }, 53.5, 1.057),
            new GBDataBase("36c", new double[] { 360, 100, 13,16 }, 59.1, 1.061),
            new GBDataBase("40a", new double[] { 400, 100, 10.5,18 }, 58.9, 1.144),
            new GBDataBase("40b", new double[] { 400, 102, 12.5,18 }, 65.2, 1.148),
            new GBDataBase("40c", new double[] { 400, 104, 14.5,18 }, 71.5, 1.152),
        };
        /// <summary>
        /// 热轧型钢(Hot rolled section steel) - 角钢
        /// </summary>
        public static List<GBDataBase> L => new List<GBDataBase> {
            new GBDataBase("2", new double[] { 20, 20, 3, }, 0.889, 0.078),
            new GBDataBase("", new double[] { 20, 20, 4, }, 1.15, 0.077),
            new GBDataBase("2.5", new double[] { 25, 25, 3, }, 1.12, 0.098),
            new GBDataBase("", new double[] { 25, 25, 4, }, 1.46, 0.097),
            new GBDataBase("3", new double[] { 30, 30, 3, }, 1.37, 0.117),
            new GBDataBase("", new double[] { 30, 30, 4, }, 1.79, 0.117),
            new GBDataBase("3.6", new double[] { 36, 36, 3, }, 1.66, 0.141),
            new GBDataBase("", new double[] { 36, 36, 4, }, 2.16, 0.141),
            new GBDataBase("", new double[] { 36, 36, 5, }, 2.65, 0.141),
            new GBDataBase("4", new double[] { 40, 40, 3, }, 1.85, 0.157),
            new GBDataBase("", new double[] { 40, 40, 4, }, 2.42, 0.157),
            new GBDataBase("", new double[] { 40, 40, 5, }, 2.98, 0.156),
            new GBDataBase("4.5", new double[] { 45, 45, 3, }, 2.09, 0.177),
            new GBDataBase("", new double[] { 45, 45, 4, }, 2.74, 0.177),
            new GBDataBase("", new double[] { 45, 45, 5, }, 3.37, 0.176),
            new GBDataBase("", new double[] { 45, 45, 6, }, 3.99, 0.176),
            new GBDataBase("5", new double[] { 50, 50, 3, }, 2.33, 0.197),
            new GBDataBase("", new double[] { 50, 50, 4, }, 3.06, 0.197),
            new GBDataBase("", new double[] { 50, 50, 5, }, 3.77, 0.196),
            new GBDataBase("", new double[] { 50, 50, 6, }, 4.46, 0.196),
            new GBDataBase("5.6", new double[] { 56, 56, 3, }, 2.624, 0.221),
            new GBDataBase("", new double[] { 56, 56, 4, }, 3.446, 0.22),
            new GBDataBase("", new double[] { 56, 56, 5, }, 4.251, 0.22),
            new GBDataBase("", new double[] { 56, 56, 6, }, 5.04, 0.22),
            new GBDataBase("", new double[] { 56, 56, 7, }, 5.81, 0.219),
            new GBDataBase("", new double[] { 56, 56, 8, }, 6.568, 0.219),
            new GBDataBase("6", new double[] { 60, 60, 5, }, 4.58, 0.236),
            new GBDataBase("", new double[] { 60, 60, 6, }, 5.43, 0.235),
            new GBDataBase("", new double[] { 60, 60, 7, }, 6.26, 0.235),
            new GBDataBase("", new double[] { 60, 60, 8, }, 7.08, 0.235),
            new GBDataBase("6.3", new double[] { 63, 63, 4, }, 3.91, 0.248),
            new GBDataBase("", new double[] { 63, 63, 5, }, 4.82, 0.248),
            new GBDataBase("", new double[] { 63, 63, 6, }, 5.72, 0.247),
            new GBDataBase("", new double[] { 63, 63, 7, }, 6.6, 0.247),
            new GBDataBase("", new double[] { 63, 63, 8, }, 7.47, 0.247),
            new GBDataBase("", new double[] { 63, 63, 10, }, 9.15, 0.246),
            new GBDataBase("7", new double[] { 70, 70, 4, }, 4.37, 0.275),
            new GBDataBase("", new double[] { 70, 70, 5, }, 5.4, 0.275),
            new GBDataBase("", new double[] { 70, 70, 6, }, 6.41, 0.275),
            new GBDataBase("", new double[] { 70, 70, 7, }, 7.4, 0.275),
            new GBDataBase("", new double[] { 70, 70, 8, }, 8.37, 0.274),
            new GBDataBase("7.5", new double[] { 75, 75, 5, }, 5.82, 0.295),
            new GBDataBase("", new double[] { 75, 75, 6, }, 6.91, 0.294),
            new GBDataBase("", new double[] { 75, 75, 7, }, 7.98, 0.294),
            new GBDataBase("", new double[] { 75, 75, 8, }, 9.03, 0.294),
            new GBDataBase("", new double[] { 75, 75, 9, }, 10.1, 0.294),
            new GBDataBase("", new double[] { 75, 75, 10, }, 11.1, 0.293),
            new GBDataBase("8", new double[] { 80, 80, 5, }, 6.21, 0.315),
            new GBDataBase("", new double[] { 80, 80, 6, }, 7.38, 0.314),
            new GBDataBase("", new double[] { 80, 80, 7, }, 8.53, 0.314),
            new GBDataBase("", new double[] { 80, 80, 8, }, 9.66, 0.314),
            new GBDataBase("", new double[] { 80, 80, 9, }, 10.8, 0.314),
            new GBDataBase("", new double[] { 80, 80, 10, }, 11.9, 0.313),
            new GBDataBase("9", new double[] { 90, 90, 6, }, 8.35, 0.354),
            new GBDataBase("", new double[] { 90, 90, 7, }, 9.66, 0.354),
            new GBDataBase("", new double[] { 90, 90, 8, }, 10.9, 0.353),
            new GBDataBase("", new double[] { 90, 90, 9, }, 12.2, 0.353),
            new GBDataBase("", new double[] { 90, 90, 10, }, 13.5, 0.353),
            new GBDataBase("", new double[] { 90, 90, 12, }, 15.9, 0.352),
            new GBDataBase("10", new double[] { 100, 100, 6, }, 9.37, 0.393),
            new GBDataBase("", new double[] { 100, 100, 7, }, 10.8, 0.393),
            new GBDataBase("", new double[] { 100, 100, 8, }, 12.3, 0.393),
            new GBDataBase("", new double[] { 100, 100, 9, }, 13.7, 0.392),
            new GBDataBase("", new double[] { 100, 100, 10, }, 15.1, 0.392),
            new GBDataBase("", new double[] { 100, 100, 12, }, 17.9, 0.391),
            new GBDataBase("", new double[] { 100, 100, 14, }, 20.6, 0.391),
            new GBDataBase("", new double[] { 100, 100, 16, }, 23.3, 0.39),
            new GBDataBase("11", new double[] { 110, 110, 7, }, 11.9, 0.433),
            new GBDataBase("", new double[] { 110, 110, 8, }, 13.5, 0.433),
            new GBDataBase("", new double[] { 110, 110, 10, }, 16.7, 0.432),
            new GBDataBase("", new double[] { 110, 110, 12, }, 19.8, 0.431),
            new GBDataBase("", new double[] { 110, 110, 14, }, 22.8, 0.431),
            new GBDataBase("12.5", new double[] { 125, 125, 8, }, 15.5, 0.492),
            new GBDataBase("", new double[] { 125, 125, 10, }, 19.1, 0.491),
            new GBDataBase("", new double[] { 125, 125, 12, }, 22.7, 0.491),
            new GBDataBase("", new double[] { 125, 125, 14, }, 26.2, 0.49),
            new GBDataBase("", new double[] { 125, 125, 16, }, 29.6, 0.489),
            new GBDataBase("14", new double[] { 140, 140, 10, }, 21.5, 0.551),
            new GBDataBase("", new double[] { 140, 140, 12, }, 25.5, 0.551),
            new GBDataBase("", new double[] { 140, 140, 14, }, 29.5, 0.55),
            new GBDataBase("", new double[] { 140, 140, 16, }, 33.4, 0.549),
            new GBDataBase("15", new double[] { 150, 150, 8, }, 18.6, 0.592),
            new GBDataBase("", new double[] { 150, 150, 10, }, 23.1, 0.591),
            new GBDataBase("", new double[] { 150, 150, 12, }, 27.4, 0.591),
            new GBDataBase("", new double[] { 150, 150, 14, }, 31.7, 0.59),
            new GBDataBase("", new double[] { 150, 150, 15, }, 33.8, 0.59),
            new GBDataBase("", new double[] { 150, 150, 16, }, 35.9, 0.589),
            new GBDataBase("16", new double[] { 160, 160, 10, }, 24.7, 0.63),
            new GBDataBase("", new double[] { 160, 160, 12, }, 29.4, 0.63),
            new GBDataBase("", new double[] { 160, 160, 14, }, 34, 0.629),
            new GBDataBase("", new double[] { 160, 160, 16, }, 38.5, 0.629),
            new GBDataBase("18", new double[] { 180, 180, 12, }, 33.2, 0.71),
            new GBDataBase("", new double[] { 180, 180, 14, }, 38.4, 0.709),
            new GBDataBase("", new double[] { 180, 180, 16, }, 43.5, 0.709),
            new GBDataBase("", new double[] { 180, 180, 18, }, 48.6, 0.708),
            new GBDataBase("20", new double[] { 200, 200, 14, }, 42.9, 0.788),
            new GBDataBase("", new double[] { 200, 200, 16, }, 48.7, 0.788),
            new GBDataBase("", new double[] { 200, 200, 18, }, 54.4, 0.787),
            new GBDataBase("", new double[] { 200, 200, 20, }, 60.1, 0.787),
            new GBDataBase("", new double[] { 200, 200, 24, }, 71.2, 0.785),
            new GBDataBase("22", new double[] { 220, 220, 16, }, 53.9, 0.866),
            new GBDataBase("", new double[] { 220, 220, 18, }, 60.3, 0.866),
            new GBDataBase("", new double[] { 220, 220, 20, }, 66.5, 0.865),
            new GBDataBase("", new double[] { 220, 220, 22, }, 72.8, 0.865),
            new GBDataBase("", new double[] { 220, 220, 24, }, 78.9, 0.864),
            new GBDataBase("", new double[] { 220, 220, 26, }, 85, 0.864),
            new GBDataBase("25", new double[] { 250, 250, 18, }, 69, 0.985),
            new GBDataBase("", new double[] { 250, 250, 20, }, 76.2, 0.984),
            new GBDataBase("", new double[] { 250, 250, 22, }, 83.3, 0.983),
            new GBDataBase("", new double[] { 250, 250, 24, }, 90.4, 0.983),
            new GBDataBase("", new double[] { 250, 250, 26, }, 97.5, 0.982),
            new GBDataBase("", new double[] { 250, 250, 28, }, 104, 0.982),
            new GBDataBase("", new double[] { 250, 250, 30, }, 111, 0.981),
            new GBDataBase("", new double[] { 250, 250, 32, }, 118, 0.981),
            new GBDataBase("", new double[] { 250, 250, 35, }, 128, 0.98),
            new GBDataBase("2.5/1.6", new double[] { 25, 16, 3, }, 0.91, 0.08),
            new GBDataBase("", new double[] { 25, 16, 4, }, 1.18, 0.079),
            new GBDataBase("3.2/2", new double[] { 32, 20, 3, }, 1.17, 0.102),
            new GBDataBase("", new double[] { 32, 20, 4, }, 1.52, 0.101),
            new GBDataBase("4/2.5", new double[] { 40, 25, 3, }, 1.48, 0.127),
            new GBDataBase("", new double[] { 40, 25, 4, }, 1.94, 0.127),
            new GBDataBase("4.5/2.8", new double[] { 45, 28, 3, }, 1.69, 0.143),
            new GBDataBase("", new double[] { 45, 28, 4, }, 2.2, 0.143),
            new GBDataBase("5/3.2", new double[] { 50, 32, 3, }, 1.91, 0.161),
            new GBDataBase("", new double[] { 50, 32, 4, }, 2.49, 0.16),
            new GBDataBase("5.6/3.6", new double[] { 56, 36, 3, }, 2.15, 0.181),
            new GBDataBase("", new double[] { 56, 36, 4, }, 2.82, 0.18),
            new GBDataBase("", new double[] { 56, 36, 5, }, 3.47, 0.18),
            new GBDataBase("6.3/4", new double[] { 63, 40, 4, }, 3.19, 0.202),
            new GBDataBase("", new double[] { 63, 40, 5, }, 3.92, 0.202),
            new GBDataBase("", new double[] { 63, 40, 6, }, 4.64, 0.201),
            new GBDataBase("", new double[] { 63, 40, 7, }, 5.34, 0.201),
            new GBDataBase("7/4.5", new double[] { 70, 45, 4, }, 3.57, 0.226),
            new GBDataBase("", new double[] { 70, 45, 5, }, 4.4, 0.225),
            new GBDataBase("", new double[] { 70, 45, 6, }, 5.22, 0.225),
            new GBDataBase("", new double[] { 70, 45, 7, }, 6.01, 0.225),
            new GBDataBase("7.5/5", new double[] { 75, 50, 5, }, 4.81, 0.245),
            new GBDataBase("", new double[] { 75, 50, 6, }, 5.7, 0.245),
            new GBDataBase("", new double[] { 75, 50, 8, }, 7.43, 0.244),
            new GBDataBase("", new double[] { 75, 50, 10, }, 9.1, 0.244),
            new GBDataBase("8/5", new double[] { 80, 50, 5, }, 5, 0.255),
            new GBDataBase("", new double[] { 80, 50, 6, }, 5.93, 0.255),
            new GBDataBase("", new double[] { 80, 50, 7, }, 6.85, 0.255),
            new GBDataBase("", new double[] { 80, 50, 8, }, 7.75, 0.254),
            new GBDataBase("9/5.6", new double[] { 90, 56, 5, }, 5.66, 0.287),
            new GBDataBase("", new double[] { 90, 56, 6, }, 6.72, 0.286),
            new GBDataBase("", new double[] { 90, 56, 7, }, 7.76, 0.286),
            new GBDataBase("", new double[] { 90, 56, 8, }, 8.78, 0.286),
            new GBDataBase("10/6.3", new double[] { 100, 63, 6, }, 7.55, 0.32),
            new GBDataBase("", new double[] { 100, 63, 7, }, 8.72, 0.32),
            new GBDataBase("", new double[] { 100, 63, 8, }, 9.88, 0.319),
            new GBDataBase("", new double[] { 100, 63, 10, }, 12.1, 0.319),
            new GBDataBase("10/8", new double[] { 100, 80, 6, }, 8.35, 0.354),
            new GBDataBase("", new double[] { 100, 80, 7, }, 9.66, 0.354),
            new GBDataBase("", new double[] { 100, 80, 8, }, 10.9, 0.353),
            new GBDataBase("", new double[] { 100, 80, 10, }, 13.5, 0.353),
            new GBDataBase("11/7", new double[] { 110, 70, 6, }, 8.35, 0.354),
            new GBDataBase("", new double[] { 110, 70, 7, }, 9.66, 0.354),
            new GBDataBase("", new double[] { 110, 70, 8, }, 10.9, 0.353),
            new GBDataBase("", new double[] { 110, 70, 10, }, 13.5, 0.353),
            new GBDataBase("12.5/8", new double[] { 125, 80, 7, }, 11.1, 0.403),
            new GBDataBase("", new double[] { 125, 80, 8, }, 12.6, 0.403),
            new GBDataBase("", new double[] { 125, 80, 10, }, 15.5, 0.402),
            new GBDataBase("", new double[] { 125, 80, 12, }, 18.3, 0.402),
            new GBDataBase("9/14", new double[] { 140, 90, 8, }, 14.2, 0.453),
            new GBDataBase("", new double[] { 140, 90, 10, }, 17.5, 0.452),
            new GBDataBase("", new double[] { 140, 90, 12, }, 20.7, 0.451),
            new GBDataBase("", new double[] { 140, 90, 14, }, 23.9, 0.451),
            new GBDataBase("9/15", new double[] { 150, 90, 8, }, 14.8, 0.473),
            new GBDataBase("", new double[] { 150, 90, 10, }, 18.3, 0.472),
            new GBDataBase("", new double[] { 150, 90, 12, }, 21.7, 0.471),
            new GBDataBase("", new double[] { 150, 90, 14, }, 25, 0.471),
            new GBDataBase("", new double[] { 150, 90, 15, }, 25.7, 0.471),
            new GBDataBase("", new double[] { 150, 90, 16, }, 28.3, 0.47),
            new GBDataBase("10/16", new double[] { 160, 100, 10, }, 19.9, 0.512),
            new GBDataBase("", new double[] { 160, 100, 12, }, 23.6, 0.511),
            new GBDataBase("", new double[] { 160, 100, 14, }, 27.2, 0.51),
            new GBDataBase("", new double[] { 160, 100, 16, }, 30.8, 0.51),
            new GBDataBase("11/18", new double[] { 180, 110, 10, }, 22.3, 0.571),
            new GBDataBase("", new double[] { 180, 110, 12, }, 26.5, 0.571),
            new GBDataBase("", new double[] { 180, 110, 14, }, 30.6, 0.57),
            new GBDataBase("", new double[] { 180, 110, 16, }, 34.6, 0.569),
            new GBDataBase("20/12.5", new double[] { 200, 125, 12, }, 29.8, 0.641),
            new GBDataBase("", new double[] { 200, 125, 14, }, 34.4, 0.64),
            new GBDataBase("", new double[] { 200, 125, 16, }, 39, 0.639),
            new GBDataBase("", new double[] { 200, 125, 18, }, 43.6, 0.639),
        };
        /// <summary>
        /// 冷弯开口型钢(Cold forming open section steel) - 内卷边槽钢
        /// </summary>
        public static List<GBDataBase> CFO_CN => new List<GBDataBase> {
            new GBDataBase("", new double[] { 60, 30, 10,2.5 }, 2.363, 0),
            new GBDataBase("", new double[] { 60, 30, 10,3 }, 2.743, 0),
            new GBDataBase("", new double[] { 80, 40, 15,2 }, 2.72, 0),
            new GBDataBase("", new double[] { 100, 50, 15,2.5 }, 4.11, 0),
            new GBDataBase("", new double[] { 100, 50, 20,2.5 }, 4.325, 0),
            new GBDataBase("", new double[] { 100, 50, 20,3 }, 5.098, 0),
            new GBDataBase("", new double[] { 120, 50, 20,2.5 }, 4.7, 0),
            new GBDataBase("", new double[] { 120, 60, 20,3 }, 6.01, 0),
            new GBDataBase("", new double[] { 140, 50, 20,2 }, 4.14, 0),
            new GBDataBase("", new double[] { 140, 50, 20,2.5 }, 5.09, 0),
            new GBDataBase("", new double[] { 140, 60, 20,2.5 }, 5.503, 0),
            new GBDataBase("", new double[] { 140, 60, 20,3 }, 6.511, 0),
            new GBDataBase("", new double[] { 160, 60, 20,2 }, 4.76, 0),
            new GBDataBase("", new double[] { 160, 60, 20,2.5 }, 5.87, 0),
            new GBDataBase("", new double[] { 160, 70, 20,3 }, 7.42, 0),
            new GBDataBase("", new double[] { 180, 60, 20,3 }, 7.453, 0),
            new GBDataBase("", new double[] { 180, 70, 20,3 }, 7.924, 0),
            new GBDataBase("", new double[] { 180, 70, 20,2 }, 5.39, 0),
            new GBDataBase("", new double[] { 180, 70, 20,2.5 }, 6.66, 0),
            new GBDataBase("", new double[] { 200, 60, 20,3 }, 7.924, 0),
            new GBDataBase("", new double[] { 200, 70, 20,2 }, 5.71, 0),
            new GBDataBase("", new double[] { 200, 70, 20,2.5 }, 7.05, 0),
            new GBDataBase("", new double[] { 200, 70, 20,3 }, 8.395, 0),
            new GBDataBase("", new double[] { 220, 75, 20,2 }, 6.18, 0),
            new GBDataBase("", new double[] { 220, 75, 20,2.5 }, 7.64, 0),
            new GBDataBase("", new double[] { 250, 40, 15,3 }, 7.924, 0),
            new GBDataBase("", new double[] { 300, 40, 15,3 }, 9.102, 0),
            new GBDataBase("", new double[] { 400, 50, 15,3 }, 11.928, 0),
            new GBDataBase("", new double[] { 450, 70, 30,6 }, 28.092, 0),
            new GBDataBase("", new double[] { 450, 70, 30,8 }, 36.421, 0),
            new GBDataBase("", new double[] { 500, 100, 40,6 }, 34.176, 0),
            new GBDataBase("", new double[] { 500, 100, 40,8 }, 44.533, 0),
            new GBDataBase("", new double[] { 500, 100, 40,10 }, 54.372, 0),
            new GBDataBase("", new double[] { 550, 120, 50,8 }, 51.397, 0),
            new GBDataBase("", new double[] { 550, 120, 50,10 }, 62.952, 0),
            new GBDataBase("", new double[] { 550, 120, 50,12 }, 73.99, 0),
            new GBDataBase("", new double[] { 600, 150, 60,12 }, 86.158, 0),
            new GBDataBase("", new double[] { 600, 150, 60,14 }, 97.395, 0),
            new GBDataBase("", new double[] { 600, 150, 60,16 }, 109.025, 0),
        };
        /// <summary>
        /// 冷弯开口型钢(Cold forming open section steel) - 卷边Z形钢
        /// </summary>
        public static List<GBDataBase> CFO_ZJ => new List<GBDataBase> {
            new GBDataBase("", new double[] { 100, 40, 20,2 }, 3.208, 0),
            new GBDataBase("", new double[] { 100, 40, 20,2.5 }, 3.933, 0),
            new GBDataBase("", new double[] { 120, 50, 20,2 }, 3.82, 0),
            new GBDataBase("", new double[] { 120, 50, 20,2.5 }, 4.7, 0),
            new GBDataBase("", new double[] { 120, 50, 20,3 }, 5.54, 0),
            new GBDataBase("", new double[] { 140, 50, 20,2.5 }, 5.11, 0),
            new GBDataBase("", new double[] { 140, 50, 20,3 }, 6.04, 0),
            new GBDataBase("", new double[] { 160, 60, 20,2.5 }, 5.87, 0),
            new GBDataBase("", new double[] { 160, 60, 20,3 }, 6.95, 0),
            new GBDataBase("", new double[] { 160, 70, 20,2.5 }, 6.27, 0),
            new GBDataBase("", new double[] { 160, 70, 20,3 }, 7.42, 0),
            new GBDataBase("", new double[] { 180, 70, 20,2.5 }, 6.68, 0),
            new GBDataBase("", new double[] { 180, 70, 20,3 }, 7.924, 0),
            new GBDataBase("", new double[] { 230, 75, 25,3 }, 9.573, 0),
            new GBDataBase("", new double[] { 230, 75, 25,4 }, 12.518, 0),
            new GBDataBase("", new double[] { 250, 75, 25,3 }, 10.044, 0),
            new GBDataBase("", new double[] { 250, 75, 25,4 }, 13.146, 0),
            new GBDataBase("", new double[] { 300, 100, 30,4 }, 16.545, 0),
            new GBDataBase("", new double[] { 300, 100, 30,6 }, 23.88, 0),
            new GBDataBase("", new double[] { 400, 120, 40,8 }, 40.789, 0),
            new GBDataBase("", new double[] { 400, 120, 40,10 }, 49.692, 0),
        };
        /// <summary>
        /// 冷弯空心型钢(Cold forming hollow sectional steel) - 方管和矩管
        /// </summary>
        public static List<GBDataBase> CFH_J => new List<GBDataBase> {
            new GBDataBase("", new double[] { 20, 20, 1.2 }, 0.679, 0),
            new GBDataBase("", new double[] { 20, 20, 1.5 }, 0.826, 0),
            new GBDataBase("", new double[] { 20, 20, 1.75 }, 0.941, 0),
            new GBDataBase("", new double[] { 20, 20, 2 }, 1.05, 0),
            new GBDataBase("", new double[] { 25, 25, 1.2 }, 0.867, 0),
            new GBDataBase("", new double[] { 25, 25, 1.5 }, 1.061, 0),
            new GBDataBase("", new double[] { 25, 25, 1.75 }, 1.215, 0),
            new GBDataBase("", new double[] { 25, 25, 2 }, 1.363, 0),
            new GBDataBase("", new double[] { 30, 30, 1.5 }, 1.296, 0),
            new GBDataBase("", new double[] { 30, 30, 1.75 }, 1.49, 0),
            new GBDataBase("", new double[] { 30, 30, 2 }, 1.677, 0),
            new GBDataBase("", new double[] { 30, 30, 2.5 }, 2.032, 0),
            new GBDataBase("", new double[] { 30, 30, 3 }, 2.361, 0),
            new GBDataBase("", new double[] { 40, 40, 1.5 }, 1.767, 0),
            new GBDataBase("", new double[] { 40, 40, 1.75 }, 2.039, 0),
            new GBDataBase("", new double[] { 40, 40, 2 }, 2.305, 0),
            new GBDataBase("", new double[] { 40, 40, 2.5 }, 2.817, 0),
            new GBDataBase("", new double[] { 40, 40, 3 }, 3.303, 0),
            new GBDataBase("", new double[] { 40, 40, 4 }, 4.198, 0),
            new GBDataBase("", new double[] { 50, 50, 1.5 }, 2.238, 0),
            new GBDataBase("", new double[] { 50, 50, 1.75 }, 2.589, 0),
            new GBDataBase("", new double[] { 50, 50, 2 }, 2.933, 0),
            new GBDataBase("", new double[] { 50, 50, 2.5 }, 3.602, 0),
            new GBDataBase("", new double[] { 50, 50, 3 }, 4.245, 0),
            new GBDataBase("", new double[] { 50, 50, 4 }, 5.454, 0),
            new GBDataBase("", new double[] { 60, 60, 2 }, 3.56, 0),
            new GBDataBase("", new double[] { 60, 60, 2.5 }, 4.387, 0),
            new GBDataBase("", new double[] { 60, 60, 3 }, 5.187, 0),
            new GBDataBase("", new double[] { 60, 60, 4 }, 6.71, 0),
            new GBDataBase("", new double[] { 60, 60, 5 }, 8.129, 0),
            new GBDataBase("", new double[] { 70, 70, 2.5 }, 5.17, 0),
            new GBDataBase("", new double[] { 70, 70, 3 }, 6.129, 0),
            new GBDataBase("", new double[] { 70, 70, 4 }, 7.966, 0),
            new GBDataBase("", new double[] { 70, 70, 5 }, 9.699, 0),
            new GBDataBase("", new double[] { 80, 80, 2.5 }, 5.957, 0),
            new GBDataBase("", new double[] { 80, 80, 3 }, 7.071, 0),
            new GBDataBase("", new double[] { 80, 80, 4 }, 9.222, 0),
            new GBDataBase("", new double[] { 80, 80, 5 }, 11.269, 0),
            new GBDataBase("", new double[] { 90, 90, 3 }, 8.013, 0),
            new GBDataBase("", new double[] { 90, 90, 4 }, 10.478, 0),
            new GBDataBase("", new double[] { 90, 90, 5 }, 12.839, 0),
            new GBDataBase("", new double[] { 90, 90, 6 }, 15.097, 0),
            new GBDataBase("", new double[] { 100, 100, 4 }, 11.734, 0),
            new GBDataBase("", new double[] { 100, 100, 5 }, 14.409, 0),
            new GBDataBase("", new double[] { 100, 100, 6 }, 16.981, 0),
            new GBDataBase("", new double[] { 110, 110, 4 }, 12.99, 0),
            new GBDataBase("", new double[] { 110, 110, 5 }, 15.98, 0),
            new GBDataBase("", new double[] { 110, 110, 6 }, 18.866, 0),
            new GBDataBase("", new double[] { 120, 120, 4 }, 14.246, 0),
            new GBDataBase("", new double[] { 120, 120, 5 }, 17.549, 0),
            new GBDataBase("", new double[] { 120, 120, 6 }, 20.749, 0),
            new GBDataBase("", new double[] { 120, 120, 8 }, 26.84, 0),
            new GBDataBase("", new double[] { 130, 130, 4 }, 15.502, 0),
            new GBDataBase("", new double[] { 130, 130, 5 }, 19.12, 0),
            new GBDataBase("", new double[] { 130, 130, 6 }, 22.634, 0),
            new GBDataBase("", new double[] { 130, 130, 8 }, 28.921, 0),
            new GBDataBase("", new double[] { 140, 140, 4 }, 16.758, 0),
            new GBDataBase("", new double[] { 140, 140, 5 }, 20.689, 0),
            new GBDataBase("", new double[] { 140, 140, 6 }, 24.517, 0),
            new GBDataBase("", new double[] { 140, 140, 8 }, 31.864, 0),
            new GBDataBase("", new double[] { 150, 150, 4 }, 18.014, 0),
            new GBDataBase("", new double[] { 150, 150, 5 }, 22.26, 0),
            new GBDataBase("", new double[] { 150, 150, 6 }, 26.402, 0),
            new GBDataBase("", new double[] { 150, 150, 8 }, 33.945, 0),
            new GBDataBase("", new double[] { 160, 160, 4 }, 19.27, 0),
            new GBDataBase("", new double[] { 160, 160, 5 }, 23.829, 0),
            new GBDataBase("", new double[] { 160, 160, 6 }, 28.285, 0),
            new GBDataBase("", new double[] { 160, 160, 8 }, 36.888, 0),
            new GBDataBase("", new double[] { 170, 170, 4 }, 20.526, 0),
            new GBDataBase("", new double[] { 170, 170, 5 }, 25.4, 0),
            new GBDataBase("", new double[] { 170, 170, 6 }, 30.17, 0),
            new GBDataBase("", new double[] { 170, 170, 8 }, 38.969, 0),
            new GBDataBase("", new double[] { 180, 180, 4 }, 21.8, 0),
            new GBDataBase("", new double[] { 180, 180, 5 }, 27, 0),
            new GBDataBase("", new double[] { 180, 180, 6 }, 32.1, 0),
            new GBDataBase("", new double[] { 180, 180, 8 }, 41.5, 0),
            new GBDataBase("", new double[] { 190, 190, 4 }, 23, 0),
            new GBDataBase("", new double[] { 190, 190, 5 }, 28.5, 0),
            new GBDataBase("", new double[] { 190, 190, 6 }, 33.9, 0),
            new GBDataBase("", new double[] { 190, 190, 8 }, 44, 0),
            new GBDataBase("", new double[] { 200, 200, 4 }, 24.3, 0),
            new GBDataBase("", new double[] { 200, 200, 5 }, 30.1, 0),
            new GBDataBase("", new double[] { 200, 200, 6 }, 35.8, 0),
            new GBDataBase("", new double[] { 200, 200, 8 }, 46.5, 0),
            new GBDataBase("", new double[] { 200, 200, 10 }, 57, 0),
            new GBDataBase("", new double[] { 220, 220, 5 }, 33.2, 0),
            new GBDataBase("", new double[] { 220, 220, 6 }, 39.6, 0),
            new GBDataBase("", new double[] { 220, 220, 8 }, 51.5, 0),
            new GBDataBase("", new double[] { 220, 220, 10 }, 63.2, 0),
            new GBDataBase("", new double[] { 220, 220, 12 }, 73.5, 0),
            new GBDataBase("", new double[] { 250, 250, 5 }, 38, 0),
            new GBDataBase("", new double[] { 250, 250, 6 }, 45.2, 0),
            new GBDataBase("", new double[] { 250, 250, 8 }, 59.1, 0),
            new GBDataBase("", new double[] { 250, 250, 10 }, 72.7, 0),
            new GBDataBase("", new double[] { 250, 250, 12 }, 84.8, 0),
            new GBDataBase("", new double[] { 280, 280, 5 }, 42.7, 0),
            new GBDataBase("", new double[] { 280, 280, 6 }, 50.9, 0),
            new GBDataBase("", new double[] { 280, 280, 8 }, 66.6, 0),
            new GBDataBase("", new double[] { 280, 280, 10 }, 82.1, 0),
            new GBDataBase("", new double[] { 280, 280, 12 }, 96.1, 0),
            new GBDataBase("", new double[] { 300, 300, 6 }, 54.7, 0),
            new GBDataBase("", new double[] { 300, 300, 8 }, 71.6, 0),
            new GBDataBase("", new double[] { 300, 300, 10 }, 88.4, 0),
            new GBDataBase("", new double[] { 300, 300, 12 }, 104, 0),
            new GBDataBase("", new double[] { 350, 350, 6 }, 64.1, 0),
            new GBDataBase("", new double[] { 350, 350, 8 }, 84.2, 0),
            new GBDataBase("", new double[] { 350, 350, 10 }, 104, 0),
            new GBDataBase("", new double[] { 350, 350, 12 }, 123, 0),
            new GBDataBase("", new double[] { 400, 400, 8 }, 96.7, 0),
            new GBDataBase("", new double[] { 400, 400, 10 }, 120, 0),
            new GBDataBase("", new double[] { 400, 400, 12 }, 141, 0),
            new GBDataBase("", new double[] { 400, 400, 14 }, 163, 0),
            new GBDataBase("", new double[] { 450, 450, 8 }, 109, 0),
            new GBDataBase("", new double[] { 450, 450, 10 }, 135, 0),
            new GBDataBase("", new double[] { 450, 450, 12 }, 160, 0),
            new GBDataBase("", new double[] { 450, 450, 14 }, 185, 0),
            new GBDataBase("", new double[] { 500, 500, 8 }, 122, 0),
            new GBDataBase("", new double[] { 500, 500, 10 }, 151, 0),
            new GBDataBase("", new double[] { 500, 500, 12 }, 179, 0),
            new GBDataBase("", new double[] { 500, 500, 14 }, 207, 0),
            new GBDataBase("", new double[] { 500, 500, 16 }, 235, 0),
            new GBDataBase("", new double[] { 30, 20, 1.5 }, 1.06, 0),
            new GBDataBase("", new double[] { 30, 20, 1.75 }, 1.22, 0),
            new GBDataBase("", new double[] { 30, 20, 2 }, 1.36, 0),
            new GBDataBase("", new double[] { 30, 20, 2.5 }, 1.64, 0),
            new GBDataBase("", new double[] { 40, 20, 1.5 }, 1.3, 0),
            new GBDataBase("", new double[] { 40, 20, 1.75 }, 1.49, 0),
            new GBDataBase("", new double[] { 40, 20, 2 }, 1.68, 0),
            new GBDataBase("", new double[] { 40, 20, 2.5 }, 2.03, 0),
            new GBDataBase("", new double[] { 40, 20, 3 }, 2.36, 0),
            new GBDataBase("", new double[] { 40, 25, 1.5 }, 1.41, 0),
            new GBDataBase("", new double[] { 40, 25, 1.75 }, 1.63, 0),
            new GBDataBase("", new double[] { 40, 25, 2 }, 1.83, 0),
            new GBDataBase("", new double[] { 40, 25, 2.5 }, 2.23, 0),
            new GBDataBase("", new double[] { 40, 25, 3 }, 2.6, 0),
            new GBDataBase("", new double[] { 40, 30, 1.5 }, 1.53, 0),
            new GBDataBase("", new double[] { 40, 30, 1.75 }, 1.77, 0),
            new GBDataBase("", new double[] { 40, 30, 2 }, 1.99, 0),
            new GBDataBase("", new double[] { 40, 30, 2.5 }, 2.42, 0),
            new GBDataBase("", new double[] { 40, 30, 3 }, 2.83, 0),
            new GBDataBase("", new double[] { 50, 25, 1.5 }, 1.65, 0),
            new GBDataBase("", new double[] { 50, 25, 1.75 }, 1.9, 0),
            new GBDataBase("", new double[] { 50, 25, 2 }, 2.15, 0),
            new GBDataBase("", new double[] { 50, 25, 2.5 }, 2.62, 0),
            new GBDataBase("", new double[] { 50, 25, 3 }, 3.07, 0),
            new GBDataBase("", new double[] { 50, 30, 1.5 }, 1.767, 0),
            new GBDataBase("", new double[] { 50, 30, 1.75 }, 2.039, 0),
            new GBDataBase("", new double[] { 50, 30, 2 }, 2.305, 0),
            new GBDataBase("", new double[] { 50, 30, 2.5 }, 2.817, 0),
            new GBDataBase("", new double[] { 50, 30, 3 }, 3.303, 0),
            new GBDataBase("", new double[] { 50, 30, 4 }, 4.198, 0),
            new GBDataBase("", new double[] { 50, 40, 1.5 }, 2.003, 0),
            new GBDataBase("", new double[] { 50, 40, 1.75 }, 2.314, 0),
            new GBDataBase("", new double[] { 50, 40, 2 }, 2.619, 0),
            new GBDataBase("", new double[] { 50, 40, 2.5 }, 3.21, 0),
            new GBDataBase("", new double[] { 50, 40, 3 }, 3.775, 0),
            new GBDataBase("", new double[] { 50, 40, 4 }, 4.826, 0),
            new GBDataBase("", new double[] { 55, 25, 1.5 }, 1.767, 0),
            new GBDataBase("", new double[] { 55, 25, 1.75 }, 2.039, 0),
            new GBDataBase("", new double[] { 55, 25, 2 }, 2.305, 0),
            new GBDataBase("", new double[] { 55, 40, 1.5 }, 2.121, 0),
            new GBDataBase("", new double[] { 55, 40, 1.75 }, 2.452, 0),
            new GBDataBase("", new double[] { 55, 40, 2 }, 2.776, 0),
            new GBDataBase("", new double[] { 55, 50, 1.75 }, 2.726, 0),
            new GBDataBase("", new double[] { 55, 50, 2 }, 3.09, 0),
            new GBDataBase("", new double[] { 60, 30, 2 }, 2.62, 0),
            new GBDataBase("", new double[] { 60, 30, 2.5 }, 3.209, 0),
            new GBDataBase("", new double[] { 60, 30, 3 }, 3.774, 0),
            new GBDataBase("", new double[] { 60, 30, 4 }, 4.826, 0),
            new GBDataBase("", new double[] { 60, 40, 2 }, 2.934, 0),
            new GBDataBase("", new double[] { 60, 40, 2.5 }, 3.602, 0),
            new GBDataBase("", new double[] { 60, 40, 3 }, 4.245, 0),
            new GBDataBase("", new double[] { 60, 40, 4 }, 5.451, 0),
            new GBDataBase("", new double[] { 70, 50, 2 }, 3.562, 0),
            new GBDataBase("", new double[] { 70, 50, 3 }, 5.187, 0),
            new GBDataBase("", new double[] { 70, 50, 4 }, 6.71, 0),
            new GBDataBase("", new double[] { 70, 50, 5 }, 8.129, 0),
            new GBDataBase("", new double[] { 80, 40, 2 }, 3.561, 0),
            new GBDataBase("", new double[] { 80, 40, 2.5 }, 4.387, 0),
            new GBDataBase("", new double[] { 80, 40, 3 }, 5.187, 0),
            new GBDataBase("", new double[] { 80, 40, 4 }, 6.71, 0),
            new GBDataBase("", new double[] { 80, 40, 5 }, 8.129, 0),
            new GBDataBase("", new double[] { 80, 60, 3 }, 6.129, 0),
            new GBDataBase("", new double[] { 80, 60, 4 }, 7.966, 0),
            new GBDataBase("", new double[] { 80, 60, 5 }, 9.699, 0),
            new GBDataBase("", new double[] { 90, 40, 3 }, 5.658, 0),
            new GBDataBase("", new double[] { 90, 40, 4 }, 7.338, 0),
            new GBDataBase("", new double[] { 90, 40, 5 }, 8.914, 0),
            new GBDataBase("", new double[] { 90, 50, 2 }, 4.19, 0),
            new GBDataBase("", new double[] { 90, 50, 2.5 }, 5.172, 0),
            new GBDataBase("", new double[] { 90, 50, 3 }, 6.129, 0),
            new GBDataBase("", new double[] { 90, 50, 4 }, 7.966, 0),
            new GBDataBase("", new double[] { 90, 50, 5 }, 9.699, 0),
            new GBDataBase("", new double[] { 90, 55, 2 }, 4.346, 0),
            new GBDataBase("", new double[] { 90, 55, 2.5 }, 5.368, 0),
            new GBDataBase("", new double[] { 90, 60, 3 }, 6.6, 0),
            new GBDataBase("", new double[] { 90, 60, 4 }, 8.594, 0),
            new GBDataBase("", new double[] { 90, 60, 5 }, 10.484, 0),
            new GBDataBase("", new double[] { 95, 50, 2 }, 4.347, 0),
            new GBDataBase("", new double[] { 95, 50, 2.5 }, 5.369, 0),
            new GBDataBase("", new double[] { 100, 50, 3 }, 6.69, 0),
            new GBDataBase("", new double[] { 100, 50, 4 }, 8.594, 0),
            new GBDataBase("", new double[] { 100, 50, 5 }, 10.484, 0),
            new GBDataBase("", new double[] { 120, 50, 2.5 }, 6.35, 0),
            new GBDataBase("", new double[] { 120, 50, 3 }, 7.543, 0),
            new GBDataBase("", new double[] { 120, 60, 3 }, 8.013, 0),
            new GBDataBase("", new double[] { 120, 60, 4 }, 10.478, 0),
            new GBDataBase("", new double[] { 120, 60, 5 }, 12.839, 0),
            new GBDataBase("", new double[] { 120, 60, 6 }, 15.097, 0),
            new GBDataBase("", new double[] { 120, 80, 3 }, 8.955, 0),
            new GBDataBase("", new double[] { 120, 80, 4 }, 11.734, 0),
            new GBDataBase("", new double[] { 120, 80, 5 }, 14.409, 0),
            new GBDataBase("", new double[] { 120, 80, 6 }, 16.981, 0),
            new GBDataBase("", new double[] { 140, 80, 4 }, 12.99, 0),
            new GBDataBase("", new double[] { 140, 80, 5 }, 15.979, 0),
            new GBDataBase("", new double[] { 140, 80, 6 }, 18.865, 0),
            new GBDataBase("", new double[] { 150, 100, 4 }, 14.874, 0),
            new GBDataBase("", new double[] { 150, 100, 5 }, 18.334, 0),
            new GBDataBase("", new double[] { 150, 100, 6 }, 21.691, 0),
            new GBDataBase("", new double[] { 150, 100, 8 }, 28.096, 0),
            new GBDataBase("", new double[] { 160, 60, 3 }, 9.898, 0),
            new GBDataBase("", new double[] { 160, 60, 4.5 }, 14.498, 0),
            new GBDataBase("", new double[] { 160, 80, 4 }, 14.216, 0),
            new GBDataBase("", new double[] { 160, 80, 5 }, 17.519, 0),
            new GBDataBase("", new double[] { 160, 80, 6 }, 20.749, 0),
            new GBDataBase("", new double[] { 160, 80, 8 }, 26.81, 0),
            new GBDataBase("", new double[] { 180, 65, 3 }, 11.075, 0),
            new GBDataBase("", new double[] { 180, 65, 4.5 }, 16.264, 0),
            new GBDataBase("", new double[] { 180, 100, 4 }, 16.758, 0),
            new GBDataBase("", new double[] { 180, 100, 5 }, 20.689, 0),
            new GBDataBase("", new double[] { 180, 100, 6 }, 24.517, 0),
            new GBDataBase("", new double[] { 180, 100, 8 }, 31.861, 0),
            new GBDataBase("", new double[] { 200, 100, 4 }, 18.014, 0),
            new GBDataBase("", new double[] { 200, 100, 5 }, 22.259, 0),
            new GBDataBase("", new double[] { 200, 100, 6 }, 26.101, 0),
            new GBDataBase("", new double[] { 200, 100, 8 }, 34.376, 0),
            new GBDataBase("", new double[] { 200, 120, 4 }, 19.3, 0),
            new GBDataBase("", new double[] { 200, 120, 5 }, 23.8, 0),
            new GBDataBase("", new double[] { 200, 120, 6 }, 28.3, 0),
            new GBDataBase("", new double[] { 200, 120, 8 }, 36.5, 0),
            new GBDataBase("", new double[] { 200, 150, 4 }, 21.2, 0),
            new GBDataBase("", new double[] { 200, 150, 5 }, 26.2, 0),
            new GBDataBase("", new double[] { 200, 150, 6 }, 31.1, 0),
            new GBDataBase("", new double[] { 200, 150, 8 }, 40.2, 0),
            new GBDataBase("", new double[] { 220, 140, 4 }, 21.8, 0),
            new GBDataBase("", new double[] { 220, 140, 5 }, 27, 0),
            new GBDataBase("", new double[] { 220, 140, 6 }, 32.1, 0),
            new GBDataBase("", new double[] { 220, 140, 8 }, 41.5, 0),
            new GBDataBase("", new double[] { 250, 150, 4 }, 24.3, 0),
            new GBDataBase("", new double[] { 250, 150, 5 }, 30.1, 0),
            new GBDataBase("", new double[] { 250, 150, 6 }, 35.8, 0),
            new GBDataBase("", new double[] { 250, 150, 8 }, 46.5, 0),
            new GBDataBase("", new double[] { 260, 180, 5 }, 33.2, 0),
            new GBDataBase("", new double[] { 260, 180, 6 }, 39.6, 0),
            new GBDataBase("", new double[] { 260, 180, 8 }, 51.5, 0),
            new GBDataBase("", new double[] { 260, 180, 10 }, 63.2, 0),
            new GBDataBase("", new double[] { 300, 200, 5 }, 38, 0),
            new GBDataBase("", new double[] { 300, 200, 6 }, 45.2, 0),
            new GBDataBase("", new double[] { 300, 200, 8 }, 59.1, 0),
            new GBDataBase("", new double[] { 300, 200, 10 }, 72.7, 0),
            new GBDataBase("", new double[] { 350, 250, 5 }, 45.8, 0),
            new GBDataBase("", new double[] { 350, 250, 6 }, 54.7, 0),
            new GBDataBase("", new double[] { 350, 250, 8 }, 71.6, 0),
            new GBDataBase("", new double[] { 350, 250, 10 }, 88.4, 0),
            new GBDataBase("", new double[] { 400, 200, 5 }, 45.8, 0),
            new GBDataBase("", new double[] { 400, 200, 6 }, 54.7, 0),
            new GBDataBase("", new double[] { 400, 200, 8 }, 71.6, 0),
            new GBDataBase("", new double[] { 400, 200, 10 }, 88.4, 0),
            new GBDataBase("", new double[] { 400, 200, 12 }, 104, 0),
            new GBDataBase("", new double[] { 400, 250, 5 }, 49.7, 0),
            new GBDataBase("", new double[] { 400, 250, 6 }, 59.4, 0),
            new GBDataBase("", new double[] { 400, 250, 8 }, 77.9, 0),
            new GBDataBase("", new double[] { 400, 250, 10 }, 96.2, 0),
            new GBDataBase("", new double[] { 400, 250, 12 }, 113, 0),
            new GBDataBase("", new double[] { 450, 250, 6 }, 64.1, 0),
            new GBDataBase("", new double[] { 450, 250, 8 }, 84.2, 0),
            new GBDataBase("", new double[] { 450, 250, 10 }, 104, 0),
            new GBDataBase("", new double[] { 450, 250, 12 }, 123, 0),
            new GBDataBase("", new double[] { 500, 300, 6 }, 73.5, 0),
            new GBDataBase("", new double[] { 500, 300, 8 }, 96.7, 0),
            new GBDataBase("", new double[] { 500, 300, 10 }, 120, 0),
            new GBDataBase("", new double[] { 500, 300, 12 }, 141, 0),
            new GBDataBase("", new double[] { 550, 350, 8 }, 109, 0),
            new GBDataBase("", new double[] { 550, 350, 10 }, 135, 0),
            new GBDataBase("", new double[] { 550, 350, 12 }, 160, 0),
            new GBDataBase("", new double[] { 550, 350, 14 }, 185, 0),
            new GBDataBase("", new double[] { 600, 400, 8 }, 122, 0),
            new GBDataBase("", new double[] { 600, 400, 10 }, 151, 0),
            new GBDataBase("", new double[] { 600, 400, 12 }, 179, 0),
            new GBDataBase("", new double[] { 600, 400, 14 }, 207, 0),
            new GBDataBase("", new double[] { 600, 400, 16 }, 235, 0),
        };
        /// <summary>
        /// 冷弯空心型钢(Cold forming hollow sectional steel) - 圆管
        /// </summary>
        public static List<GBDataBase> CFH_Y => new List<GBDataBase> {
            new GBDataBase("", new double[] { 21.3, 1.2 }, 0.59, 0),
            new GBDataBase("", new double[] { 21.3, 1.5 }, 0.73, 0),
            new GBDataBase("", new double[] { 21.3, 1.75 }, 0.84, 0),
            new GBDataBase("", new double[] { 21.3, 2 }, 0.95, 0),
            new GBDataBase("", new double[] { 21.3, 2.5 }, 1.16, 0),
            new GBDataBase("", new double[] { 21.3, 3 }, 1.35, 0),
            new GBDataBase("", new double[] { 26.8, 1.2 }, 0.76, 0),
            new GBDataBase("", new double[] { 26.8, 1.5 }, 0.94, 0),
            new GBDataBase("", new double[] { 26.8, 1.75 }, 1.08, 0),
            new GBDataBase("", new double[] { 26.8, 2 }, 1.22, 0),
            new GBDataBase("", new double[] { 26.8, 2.5 }, 1.5, 0),
            new GBDataBase("", new double[] { 26.8, 3 }, 1.76, 0),
            new GBDataBase("", new double[] { 33.5, 1.5 }, 1.18, 0),
            new GBDataBase("", new double[] { 33.5, 2 }, 1.55, 0),
            new GBDataBase("", new double[] { 33.5, 2.5 }, 1.91, 0),
            new GBDataBase("", new double[] { 33.5, 3 }, 2.26, 0),
            new GBDataBase("", new double[] { 33.5, 3.5 }, 2.59, 0),
            new GBDataBase("", new double[] { 33.5, 4 }, 2.91, 0),
            new GBDataBase("", new double[] { 42.3, 1.5 }, 1.51, 0),
            new GBDataBase("", new double[] { 42.3, 2 }, 1.99, 0),
            new GBDataBase("", new double[] { 42.3, 2.5 }, 2.45, 0),
            new GBDataBase("", new double[] { 42.3, 3 }, 2.91, 0),
            new GBDataBase("", new double[] { 42.3, 4 }, 3.78, 0),
            new GBDataBase("", new double[] { 48, 1.5 }, 1.72, 0),
            new GBDataBase("", new double[] { 48, 2 }, 2.27, 0),
            new GBDataBase("", new double[] { 48, 2.5 }, 2.81, 0),
            new GBDataBase("", new double[] { 48, 3 }, 3.33, 0),
            new GBDataBase("", new double[] { 48, 4 }, 4.34, 0),
            new GBDataBase("", new double[] { 48, 5 }, 5.3, 0),
            new GBDataBase("", new double[] { 60, 2 }, 2.86, 0),
            new GBDataBase("", new double[] { 60, 2.5 }, 3.55, 0),
            new GBDataBase("", new double[] { 60, 3 }, 4.22, 0),
            new GBDataBase("", new double[] { 60, 4 }, 5.52, 0),
            new GBDataBase("", new double[] { 60, 5 }, 6.78, 0),
            new GBDataBase("", new double[] { 75.5, 2.5 }, 4.5, 0),
            new GBDataBase("", new double[] { 75.5, 3 }, 5.36, 0),
            new GBDataBase("", new double[] { 75.5, 4 }, 7.05, 0),
            new GBDataBase("", new double[] { 75.5, 5 }, 8.69, 0),
            new GBDataBase("", new double[] { 88.5, 3 }, 6.33, 0),
            new GBDataBase("", new double[] { 88.5, 4 }, 8.34, 0),
            new GBDataBase("", new double[] { 88.5, 5 }, 10.3, 0),
            new GBDataBase("", new double[] { 88.5, 6 }, 12.21, 0),
            new GBDataBase("", new double[] { 114, 4 }, 10.85, 0),
            new GBDataBase("", new double[] { 114, 5 }, 13.44, 0),
            new GBDataBase("", new double[] { 114, 6 }, 15.98, 0),
            new GBDataBase("", new double[] { 140, 4 }, 13.42, 0),
            new GBDataBase("", new double[] { 140, 5 }, 16.65, 0),
            new GBDataBase("", new double[] { 140, 6 }, 19.83, 0),
            new GBDataBase("", new double[] { 165, 4 }, 15.88, 0),
            new GBDataBase("", new double[] { 165, 5 }, 19.73, 0),
            new GBDataBase("", new double[] { 165, 6 }, 23.53, 0),
            new GBDataBase("", new double[] { 165, 8 }, 30.97, 0),
            new GBDataBase("", new double[] { 219.1, 5 }, 26.4, 0),
            new GBDataBase("", new double[] { 219.1, 6 }, 31.53, 0),
            new GBDataBase("", new double[] { 219.1, 8 }, 41.6, 0),
            new GBDataBase("", new double[] { 219.1, 10 }, 51.6, 0),
            new GBDataBase("", new double[] { 273, 5 }, 33, 0),
            new GBDataBase("", new double[] { 273, 6 }, 39.5, 0),
            new GBDataBase("", new double[] { 273, 8 }, 52.3, 0),
            new GBDataBase("", new double[] { 273, 10 }, 64.9, 0),
            new GBDataBase("", new double[] { 325, 5 }, 39.5, 0),
            new GBDataBase("", new double[] { 325, 6 }, 47.2, 0),
            new GBDataBase("", new double[] { 325, 8 }, 62.5, 0),
            new GBDataBase("", new double[] { 325, 10 }, 77.7, 0),
            new GBDataBase("", new double[] { 325, 12 }, 92.6, 0),
            new GBDataBase("", new double[] { 355.6, 6 }, 51.7, 0),
            new GBDataBase("", new double[] { 355.6, 8 }, 68.6, 0),
            new GBDataBase("", new double[] { 355.6, 10 }, 85.2, 0),
            new GBDataBase("", new double[] { 355.6, 12 }, 101.7, 0),
            new GBDataBase("", new double[] { 406.4, 8 }, 78.6, 0),
            new GBDataBase("", new double[] { 406.4, 10 }, 97.8, 0),
            new GBDataBase("", new double[] { 406.4, 12 }, 116.7, 0),
            new GBDataBase("", new double[] { 457, 8 }, 88.6, 0),
            new GBDataBase("", new double[] { 457, 10 }, 110, 0),
            new GBDataBase("", new double[] { 457, 12 }, 131.7, 0),
            new GBDataBase("", new double[] { 508, 8 }, 98.6, 0),
            new GBDataBase("", new double[] { 508, 10 }, 123, 0),
            new GBDataBase("", new double[] { 508, 12 }, 146.8, 0),
            new GBDataBase("", new double[] { 610, 8 }, 118.8, 0),
            new GBDataBase("", new double[] { 610, 10 }, 148, 0),
            new GBDataBase("", new double[] { 610, 12.5 }, 184.2, 0),
            new GBDataBase("", new double[] { 610, 16 }, 234.4, 0),
        };
    }
}
